## Copy this file to credentials.properties and populate values
## Don't include quotes around the value

## Acecess Key for the AWS Cloud account where the infrastructure will be provisioned.
##export AWS_ACCESS_KEY_ID=
##export TF_VAR_access_key=

## Acecess Key for the AWS Cloud account where the infrastructure will be provisioned.
##export AWS_SECRET_ACCESS_KEY=
##export TF_VAR_secret_key=

##This token will be used by AWS cloud during ROSA cluster provision
##export TF_VAR_rosa_token=

## gitops_repo_host: The host for the git repository (e.g. github.com, bitbucket.org).
## Supported Git servers are GitHub, Github Enterprise, Gitlab, Bitbucket, Azure DevOps, and Gitea. If this value
## is left commented out, the automation will default to using Gitea.
##export TF_VAR_gitops_repo_host=

## The username on git server host that will be used to provision and access the gitops repository. If the host is
## blank this value will be ignored and the Gitea credentials will be used.
##export TF_VAR_gitops_repo_username=

## The personal access token that will be used to authenticate to the git server to provision and access the
## gitops repository. (The user should have necessary access in the org to create the repository and the token
## should have `delete_repo` permission.)
## If the host is blank this value will be ignored and the Gitea credentials will be used.
##export TF_VAR_gitops_repo_token=

## (Optional) The organization/owner/group on the git server where the gitops repository will be provisioned/found.
## If not provided the org will default to the username.
##export TF_VAR_gitops_repo_org=

## (Optional) The project on the Azure DevOps server where the gitops repository will be provisioned/found.
## This value is only required for repositories on Azure DevOps.
##export TF_VAR_gitops_repo_project=

##base64 encoding of the portworx spec file
##export TF_VAR_portworx_spec=

##Provide IAM user arn
##export TF_VAR_user_arn=

